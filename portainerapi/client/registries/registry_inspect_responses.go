// Code generated by go-swagger; DO NOT EDIT.

package registries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// RegistryInspectReader is a Reader for the RegistryInspect structure.
type RegistryInspectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegistryInspectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRegistryInspectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRegistryInspectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewRegistryInspectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRegistryInspectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRegistryInspectOK creates a RegistryInspectOK with default headers values
func NewRegistryInspectOK() *RegistryInspectOK {
	return &RegistryInspectOK{}
}

/*RegistryInspectOK handles this case with default header values.

Success
*/
type RegistryInspectOK struct {
	Payload *models.Registry
}

func (o *RegistryInspectOK) Error() string {
	return fmt.Sprintf("[GET /registries/{id}][%d] registryInspectOK  %+v", 200, o.Payload)
}

func (o *RegistryInspectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Registry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegistryInspectBadRequest creates a RegistryInspectBadRequest with default headers values
func NewRegistryInspectBadRequest() *RegistryInspectBadRequest {
	return &RegistryInspectBadRequest{}
}

/*RegistryInspectBadRequest handles this case with default header values.

Invalid request
*/
type RegistryInspectBadRequest struct {
	Payload *models.GenericError
}

func (o *RegistryInspectBadRequest) Error() string {
	return fmt.Sprintf("[GET /registries/{id}][%d] registryInspectBadRequest  %+v", 400, o.Payload)
}

func (o *RegistryInspectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegistryInspectNotFound creates a RegistryInspectNotFound with default headers values
func NewRegistryInspectNotFound() *RegistryInspectNotFound {
	return &RegistryInspectNotFound{}
}

/*RegistryInspectNotFound handles this case with default header values.

Registry not found
*/
type RegistryInspectNotFound struct {
	Payload *models.GenericError
}

func (o *RegistryInspectNotFound) Error() string {
	return fmt.Sprintf("[GET /registries/{id}][%d] registryInspectNotFound  %+v", 404, o.Payload)
}

func (o *RegistryInspectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegistryInspectInternalServerError creates a RegistryInspectInternalServerError with default headers values
func NewRegistryInspectInternalServerError() *RegistryInspectInternalServerError {
	return &RegistryInspectInternalServerError{}
}

/*RegistryInspectInternalServerError handles this case with default header values.

Server error
*/
type RegistryInspectInternalServerError struct {
	Payload *models.GenericError
}

func (o *RegistryInspectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /registries/{id}][%d] registryInspectInternalServerError  %+v", 500, o.Payload)
}

func (o *RegistryInspectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
