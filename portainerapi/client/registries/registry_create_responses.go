// Code generated by go-swagger; DO NOT EDIT.

package registries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// RegistryCreateReader is a Reader for the RegistryCreate structure.
type RegistryCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegistryCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRegistryCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewRegistryCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewRegistryCreateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewRegistryCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRegistryCreateOK creates a RegistryCreateOK with default headers values
func NewRegistryCreateOK() *RegistryCreateOK {
	return &RegistryCreateOK{}
}

/*RegistryCreateOK handles this case with default header values.

Success
*/
type RegistryCreateOK struct {
	Payload *models.Registry
}

func (o *RegistryCreateOK) Error() string {
	return fmt.Sprintf("[POST /registries][%d] registryCreateOK  %+v", 200, o.Payload)
}

func (o *RegistryCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Registry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegistryCreateBadRequest creates a RegistryCreateBadRequest with default headers values
func NewRegistryCreateBadRequest() *RegistryCreateBadRequest {
	return &RegistryCreateBadRequest{}
}

/*RegistryCreateBadRequest handles this case with default header values.

Invalid request
*/
type RegistryCreateBadRequest struct {
	Payload *models.GenericError
}

func (o *RegistryCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /registries][%d] registryCreateBadRequest  %+v", 400, o.Payload)
}

func (o *RegistryCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegistryCreateConflict creates a RegistryCreateConflict with default headers values
func NewRegistryCreateConflict() *RegistryCreateConflict {
	return &RegistryCreateConflict{}
}

/*RegistryCreateConflict handles this case with default header values.

Registry already exists
*/
type RegistryCreateConflict struct {
	Payload *models.GenericError
}

func (o *RegistryCreateConflict) Error() string {
	return fmt.Sprintf("[POST /registries][%d] registryCreateConflict  %+v", 409, o.Payload)
}

func (o *RegistryCreateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegistryCreateInternalServerError creates a RegistryCreateInternalServerError with default headers values
func NewRegistryCreateInternalServerError() *RegistryCreateInternalServerError {
	return &RegistryCreateInternalServerError{}
}

/*RegistryCreateInternalServerError handles this case with default header values.

Server error
*/
type RegistryCreateInternalServerError struct {
	Payload *models.GenericError
}

func (o *RegistryCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /registries][%d] registryCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *RegistryCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
