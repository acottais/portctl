// Code generated by go-swagger; DO NOT EDIT.

package resource_controls

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// ResourceControlDeleteReader is a Reader for the ResourceControlDelete structure.
type ResourceControlDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResourceControlDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewResourceControlDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewResourceControlDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewResourceControlDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewResourceControlDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewResourceControlDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewResourceControlDeleteNoContent creates a ResourceControlDeleteNoContent with default headers values
func NewResourceControlDeleteNoContent() *ResourceControlDeleteNoContent {
	return &ResourceControlDeleteNoContent{}
}

/*ResourceControlDeleteNoContent handles this case with default header values.

Success
*/
type ResourceControlDeleteNoContent struct {
}

func (o *ResourceControlDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /resource_controls/{id}][%d] resourceControlDeleteNoContent ", 204)
}

func (o *ResourceControlDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResourceControlDeleteBadRequest creates a ResourceControlDeleteBadRequest with default headers values
func NewResourceControlDeleteBadRequest() *ResourceControlDeleteBadRequest {
	return &ResourceControlDeleteBadRequest{}
}

/*ResourceControlDeleteBadRequest handles this case with default header values.

Invalid request
*/
type ResourceControlDeleteBadRequest struct {
	Payload *models.GenericError
}

func (o *ResourceControlDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /resource_controls/{id}][%d] resourceControlDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *ResourceControlDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceControlDeleteForbidden creates a ResourceControlDeleteForbidden with default headers values
func NewResourceControlDeleteForbidden() *ResourceControlDeleteForbidden {
	return &ResourceControlDeleteForbidden{}
}

/*ResourceControlDeleteForbidden handles this case with default header values.

Unauthorized
*/
type ResourceControlDeleteForbidden struct {
	Payload *models.GenericError
}

func (o *ResourceControlDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /resource_controls/{id}][%d] resourceControlDeleteForbidden  %+v", 403, o.Payload)
}

func (o *ResourceControlDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceControlDeleteNotFound creates a ResourceControlDeleteNotFound with default headers values
func NewResourceControlDeleteNotFound() *ResourceControlDeleteNotFound {
	return &ResourceControlDeleteNotFound{}
}

/*ResourceControlDeleteNotFound handles this case with default header values.

Resource control not found
*/
type ResourceControlDeleteNotFound struct {
	Payload *models.GenericError
}

func (o *ResourceControlDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /resource_controls/{id}][%d] resourceControlDeleteNotFound  %+v", 404, o.Payload)
}

func (o *ResourceControlDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceControlDeleteInternalServerError creates a ResourceControlDeleteInternalServerError with default headers values
func NewResourceControlDeleteInternalServerError() *ResourceControlDeleteInternalServerError {
	return &ResourceControlDeleteInternalServerError{}
}

/*ResourceControlDeleteInternalServerError handles this case with default header values.

Server error
*/
type ResourceControlDeleteInternalServerError struct {
	Payload *models.GenericError
}

func (o *ResourceControlDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /resource_controls/{id}][%d] resourceControlDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *ResourceControlDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
