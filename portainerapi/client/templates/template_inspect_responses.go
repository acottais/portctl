// Code generated by go-swagger; DO NOT EDIT.

package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// TemplateInspectReader is a Reader for the TemplateInspect structure.
type TemplateInspectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TemplateInspectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTemplateInspectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewTemplateInspectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewTemplateInspectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewTemplateInspectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewTemplateInspectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTemplateInspectOK creates a TemplateInspectOK with default headers values
func NewTemplateInspectOK() *TemplateInspectOK {
	return &TemplateInspectOK{}
}

/*TemplateInspectOK handles this case with default header values.

Success
*/
type TemplateInspectOK struct {
	Payload *models.Template
}

func (o *TemplateInspectOK) Error() string {
	return fmt.Sprintf("[GET /templates/{id}][%d] templateInspectOK  %+v", 200, o.Payload)
}

func (o *TemplateInspectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Template)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplateInspectBadRequest creates a TemplateInspectBadRequest with default headers values
func NewTemplateInspectBadRequest() *TemplateInspectBadRequest {
	return &TemplateInspectBadRequest{}
}

/*TemplateInspectBadRequest handles this case with default header values.

Invalid request
*/
type TemplateInspectBadRequest struct {
	Payload *models.GenericError
}

func (o *TemplateInspectBadRequest) Error() string {
	return fmt.Sprintf("[GET /templates/{id}][%d] templateInspectBadRequest  %+v", 400, o.Payload)
}

func (o *TemplateInspectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplateInspectForbidden creates a TemplateInspectForbidden with default headers values
func NewTemplateInspectForbidden() *TemplateInspectForbidden {
	return &TemplateInspectForbidden{}
}

/*TemplateInspectForbidden handles this case with default header values.

Unauthorized
*/
type TemplateInspectForbidden struct {
	Payload *models.GenericError
}

func (o *TemplateInspectForbidden) Error() string {
	return fmt.Sprintf("[GET /templates/{id}][%d] templateInspectForbidden  %+v", 403, o.Payload)
}

func (o *TemplateInspectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplateInspectNotFound creates a TemplateInspectNotFound with default headers values
func NewTemplateInspectNotFound() *TemplateInspectNotFound {
	return &TemplateInspectNotFound{}
}

/*TemplateInspectNotFound handles this case with default header values.

Template not found
*/
type TemplateInspectNotFound struct {
	Payload *models.GenericError
}

func (o *TemplateInspectNotFound) Error() string {
	return fmt.Sprintf("[GET /templates/{id}][%d] templateInspectNotFound  %+v", 404, o.Payload)
}

func (o *TemplateInspectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplateInspectInternalServerError creates a TemplateInspectInternalServerError with default headers values
func NewTemplateInspectInternalServerError() *TemplateInspectInternalServerError {
	return &TemplateInspectInternalServerError{}
}

/*TemplateInspectInternalServerError handles this case with default header values.

Server error
*/
type TemplateInspectInternalServerError struct {
	Payload *models.GenericError
}

func (o *TemplateInspectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /templates/{id}][%d] templateInspectInternalServerError  %+v", 500, o.Payload)
}

func (o *TemplateInspectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
