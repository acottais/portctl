// Code generated by go-swagger; DO NOT EDIT.

package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// TemplateUpdateReader is a Reader for the TemplateUpdate structure.
type TemplateUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TemplateUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTemplateUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewTemplateUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewTemplateUpdateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewTemplateUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewTemplateUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTemplateUpdateOK creates a TemplateUpdateOK with default headers values
func NewTemplateUpdateOK() *TemplateUpdateOK {
	return &TemplateUpdateOK{}
}

/*TemplateUpdateOK handles this case with default header values.

Success
*/
type TemplateUpdateOK struct {
}

func (o *TemplateUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /templates/{id}][%d] templateUpdateOK ", 200)
}

func (o *TemplateUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTemplateUpdateBadRequest creates a TemplateUpdateBadRequest with default headers values
func NewTemplateUpdateBadRequest() *TemplateUpdateBadRequest {
	return &TemplateUpdateBadRequest{}
}

/*TemplateUpdateBadRequest handles this case with default header values.

Invalid request
*/
type TemplateUpdateBadRequest struct {
	Payload *models.GenericError
}

func (o *TemplateUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /templates/{id}][%d] templateUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *TemplateUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplateUpdateForbidden creates a TemplateUpdateForbidden with default headers values
func NewTemplateUpdateForbidden() *TemplateUpdateForbidden {
	return &TemplateUpdateForbidden{}
}

/*TemplateUpdateForbidden handles this case with default header values.

Unauthorized
*/
type TemplateUpdateForbidden struct {
	Payload *models.GenericError
}

func (o *TemplateUpdateForbidden) Error() string {
	return fmt.Sprintf("[PUT /templates/{id}][%d] templateUpdateForbidden  %+v", 403, o.Payload)
}

func (o *TemplateUpdateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplateUpdateNotFound creates a TemplateUpdateNotFound with default headers values
func NewTemplateUpdateNotFound() *TemplateUpdateNotFound {
	return &TemplateUpdateNotFound{}
}

/*TemplateUpdateNotFound handles this case with default header values.

Template not found
*/
type TemplateUpdateNotFound struct {
	Payload *models.GenericError
}

func (o *TemplateUpdateNotFound) Error() string {
	return fmt.Sprintf("[PUT /templates/{id}][%d] templateUpdateNotFound  %+v", 404, o.Payload)
}

func (o *TemplateUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplateUpdateInternalServerError creates a TemplateUpdateInternalServerError with default headers values
func NewTemplateUpdateInternalServerError() *TemplateUpdateInternalServerError {
	return &TemplateUpdateInternalServerError{}
}

/*TemplateUpdateInternalServerError handles this case with default header values.

Server error
*/
type TemplateUpdateInternalServerError struct {
	Payload *models.GenericError
}

func (o *TemplateUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /templates/{id}][%d] templateUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *TemplateUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
