// Code generated by go-swagger; DO NOT EDIT.

package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// TemplateDeleteReader is a Reader for the TemplateDelete structure.
type TemplateDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TemplateDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewTemplateDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewTemplateDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewTemplateDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTemplateDeleteNoContent creates a TemplateDeleteNoContent with default headers values
func NewTemplateDeleteNoContent() *TemplateDeleteNoContent {
	return &TemplateDeleteNoContent{}
}

/*TemplateDeleteNoContent handles this case with default header values.

Success
*/
type TemplateDeleteNoContent struct {
}

func (o *TemplateDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] templateDeleteNoContent ", 204)
}

func (o *TemplateDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewTemplateDeleteBadRequest creates a TemplateDeleteBadRequest with default headers values
func NewTemplateDeleteBadRequest() *TemplateDeleteBadRequest {
	return &TemplateDeleteBadRequest{}
}

/*TemplateDeleteBadRequest handles this case with default header values.

Invalid request
*/
type TemplateDeleteBadRequest struct {
	Payload *models.GenericError
}

func (o *TemplateDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] templateDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *TemplateDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTemplateDeleteInternalServerError creates a TemplateDeleteInternalServerError with default headers values
func NewTemplateDeleteInternalServerError() *TemplateDeleteInternalServerError {
	return &TemplateDeleteInternalServerError{}
}

/*TemplateDeleteInternalServerError handles this case with default header values.

Server error
*/
type TemplateDeleteInternalServerError struct {
	Payload *models.GenericError
}

func (o *TemplateDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /templates/{id}][%d] templateDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *TemplateDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
