// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// UserAdminInitReader is a Reader for the UserAdminInit structure.
type UserAdminInitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserAdminInitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserAdminInitOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserAdminInitBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewUserAdminInitConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserAdminInitInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserAdminInitOK creates a UserAdminInitOK with default headers values
func NewUserAdminInitOK() *UserAdminInitOK {
	return &UserAdminInitOK{}
}

/*UserAdminInitOK handles this case with default header values.

Success
*/
type UserAdminInitOK struct {
	Payload *models.User
}

func (o *UserAdminInitOK) Error() string {
	return fmt.Sprintf("[POST /users/admin/init][%d] userAdminInitOK  %+v", 200, o.Payload)
}

func (o *UserAdminInitOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserAdminInitBadRequest creates a UserAdminInitBadRequest with default headers values
func NewUserAdminInitBadRequest() *UserAdminInitBadRequest {
	return &UserAdminInitBadRequest{}
}

/*UserAdminInitBadRequest handles this case with default header values.

Invalid request
*/
type UserAdminInitBadRequest struct {
	Payload *models.GenericError
}

func (o *UserAdminInitBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/admin/init][%d] userAdminInitBadRequest  %+v", 400, o.Payload)
}

func (o *UserAdminInitBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserAdminInitConflict creates a UserAdminInitConflict with default headers values
func NewUserAdminInitConflict() *UserAdminInitConflict {
	return &UserAdminInitConflict{}
}

/*UserAdminInitConflict handles this case with default header values.

Admin user already initialized
*/
type UserAdminInitConflict struct {
	Payload *models.GenericError
}

func (o *UserAdminInitConflict) Error() string {
	return fmt.Sprintf("[POST /users/admin/init][%d] userAdminInitConflict  %+v", 409, o.Payload)
}

func (o *UserAdminInitConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserAdminInitInternalServerError creates a UserAdminInitInternalServerError with default headers values
func NewUserAdminInitInternalServerError() *UserAdminInitInternalServerError {
	return &UserAdminInitInternalServerError{}
}

/*UserAdminInitInternalServerError handles this case with default header values.

Server error
*/
type UserAdminInitInternalServerError struct {
	Payload *models.GenericError
}

func (o *UserAdminInitInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/admin/init][%d] userAdminInitInternalServerError  %+v", 500, o.Payload)
}

func (o *UserAdminInitInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
