// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// UserPasswordCheckReader is a Reader for the UserPasswordCheck structure.
type UserPasswordCheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserPasswordCheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUserPasswordCheckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserPasswordCheckBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUserPasswordCheckNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserPasswordCheckInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserPasswordCheckOK creates a UserPasswordCheckOK with default headers values
func NewUserPasswordCheckOK() *UserPasswordCheckOK {
	return &UserPasswordCheckOK{}
}

/*UserPasswordCheckOK handles this case with default header values.

Success
*/
type UserPasswordCheckOK struct {
	Payload *models.UserPasswordCheckResponse
}

func (o *UserPasswordCheckOK) Error() string {
	return fmt.Sprintf("[POST /users/{id}/passwd][%d] userPasswordCheckOK  %+v", 200, o.Payload)
}

func (o *UserPasswordCheckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserPasswordCheckResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserPasswordCheckBadRequest creates a UserPasswordCheckBadRequest with default headers values
func NewUserPasswordCheckBadRequest() *UserPasswordCheckBadRequest {
	return &UserPasswordCheckBadRequest{}
}

/*UserPasswordCheckBadRequest handles this case with default header values.

Invalid request
*/
type UserPasswordCheckBadRequest struct {
	Payload *models.GenericError
}

func (o *UserPasswordCheckBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/{id}/passwd][%d] userPasswordCheckBadRequest  %+v", 400, o.Payload)
}

func (o *UserPasswordCheckBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserPasswordCheckNotFound creates a UserPasswordCheckNotFound with default headers values
func NewUserPasswordCheckNotFound() *UserPasswordCheckNotFound {
	return &UserPasswordCheckNotFound{}
}

/*UserPasswordCheckNotFound handles this case with default header values.

User not found
*/
type UserPasswordCheckNotFound struct {
	Payload *models.GenericError
}

func (o *UserPasswordCheckNotFound) Error() string {
	return fmt.Sprintf("[POST /users/{id}/passwd][%d] userPasswordCheckNotFound  %+v", 404, o.Payload)
}

func (o *UserPasswordCheckNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserPasswordCheckInternalServerError creates a UserPasswordCheckInternalServerError with default headers values
func NewUserPasswordCheckInternalServerError() *UserPasswordCheckInternalServerError {
	return &UserPasswordCheckInternalServerError{}
}

/*UserPasswordCheckInternalServerError handles this case with default header values.

Server error
*/
type UserPasswordCheckInternalServerError struct {
	Payload *models.GenericError
}

func (o *UserPasswordCheckInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/{id}/passwd][%d] userPasswordCheckInternalServerError  %+v", 500, o.Payload)
}

func (o *UserPasswordCheckInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
