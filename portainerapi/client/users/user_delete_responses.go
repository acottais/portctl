// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// UserDeleteReader is a Reader for the UserDelete structure.
type UserDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUserDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUserDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUserDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUserDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUserDeleteNoContent creates a UserDeleteNoContent with default headers values
func NewUserDeleteNoContent() *UserDeleteNoContent {
	return &UserDeleteNoContent{}
}

/*UserDeleteNoContent handles this case with default header values.

Success
*/
type UserDeleteNoContent struct {
}

func (o *UserDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}][%d] userDeleteNoContent ", 204)
}

func (o *UserDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserDeleteBadRequest creates a UserDeleteBadRequest with default headers values
func NewUserDeleteBadRequest() *UserDeleteBadRequest {
	return &UserDeleteBadRequest{}
}

/*UserDeleteBadRequest handles this case with default header values.

Invalid request
*/
type UserDeleteBadRequest struct {
	Payload *models.GenericError
}

func (o *UserDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}][%d] userDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *UserDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserDeleteNotFound creates a UserDeleteNotFound with default headers values
func NewUserDeleteNotFound() *UserDeleteNotFound {
	return &UserDeleteNotFound{}
}

/*UserDeleteNotFound handles this case with default header values.

User not found
*/
type UserDeleteNotFound struct {
	Payload *models.GenericError
}

func (o *UserDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}][%d] userDeleteNotFound  %+v", 404, o.Payload)
}

func (o *UserDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserDeleteInternalServerError creates a UserDeleteInternalServerError with default headers values
func NewUserDeleteInternalServerError() *UserDeleteInternalServerError {
	return &UserDeleteInternalServerError{}
}

/*UserDeleteInternalServerError handles this case with default header values.

Server error
*/
type UserDeleteInternalServerError struct {
	Payload *models.GenericError
}

func (o *UserDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /users/{id}][%d] userDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *UserDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
