// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// StackCreateReader is a Reader for the StackCreate structure.
type StackCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStackCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewStackCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewStackCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewStackCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewStackCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStackCreateOK creates a StackCreateOK with default headers values
func NewStackCreateOK() *StackCreateOK {
	return &StackCreateOK{}
}

/*StackCreateOK handles this case with default header values.

Success
*/
type StackCreateOK struct {
	Payload *models.Stack
}

func (o *StackCreateOK) Error() string {
	return fmt.Sprintf("[POST /stacks][%d] stackCreateOK  %+v", 200, o.Payload)
}

func (o *StackCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackCreateBadRequest creates a StackCreateBadRequest with default headers values
func NewStackCreateBadRequest() *StackCreateBadRequest {
	return &StackCreateBadRequest{}
}

/*StackCreateBadRequest handles this case with default header values.

Invalid request
*/
type StackCreateBadRequest struct {
	Payload *models.GenericError
}

func (o *StackCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /stacks][%d] stackCreateBadRequest  %+v", 400, o.Payload)
}

func (o *StackCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackCreateForbidden creates a StackCreateForbidden with default headers values
func NewStackCreateForbidden() *StackCreateForbidden {
	return &StackCreateForbidden{}
}

/*StackCreateForbidden handles this case with default header values.

Unauthorized
*/
type StackCreateForbidden struct {
	Payload *models.GenericError
}

func (o *StackCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /stacks][%d] stackCreateForbidden  %+v", 403, o.Payload)
}

func (o *StackCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackCreateNotFound creates a StackCreateNotFound with default headers values
func NewStackCreateNotFound() *StackCreateNotFound {
	return &StackCreateNotFound{}
}

/*StackCreateNotFound handles this case with default header values.

Endpoint not found
*/
type StackCreateNotFound struct {
	Payload *models.GenericError
}

func (o *StackCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /stacks][%d] stackCreateNotFound  %+v", 404, o.Payload)
}

func (o *StackCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackCreateInternalServerError creates a StackCreateInternalServerError with default headers values
func NewStackCreateInternalServerError() *StackCreateInternalServerError {
	return &StackCreateInternalServerError{}
}

/*StackCreateInternalServerError handles this case with default header values.

Server error
*/
type StackCreateInternalServerError struct {
	Payload *models.GenericError
}

func (o *StackCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /stacks][%d] stackCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *StackCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
