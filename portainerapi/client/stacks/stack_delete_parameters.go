// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewStackDeleteParams creates a new StackDeleteParams object
// with the default values initialized.
func NewStackDeleteParams() *StackDeleteParams {
	var ()
	return &StackDeleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStackDeleteParamsWithTimeout creates a new StackDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStackDeleteParamsWithTimeout(timeout time.Duration) *StackDeleteParams {
	var ()
	return &StackDeleteParams{

		timeout: timeout,
	}
}

// NewStackDeleteParamsWithContext creates a new StackDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewStackDeleteParamsWithContext(ctx context.Context) *StackDeleteParams {
	var ()
	return &StackDeleteParams{

		Context: ctx,
	}
}

// NewStackDeleteParamsWithHTTPClient creates a new StackDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStackDeleteParamsWithHTTPClient(client *http.Client) *StackDeleteParams {
	var ()
	return &StackDeleteParams{
		HTTPClient: client,
	}
}

/*StackDeleteParams contains all the parameters to send to the API endpoint
for the stack delete operation typically these are written to a http.Request
*/
type StackDeleteParams struct {

	/*EndpointID
	  Endpoint identifier used to remove an external stack (required when external is set to true)

	*/
	EndpointID *string
	/*External
	  Set to true to delete an external stack. Only external Swarm stacks are supported.

	*/
	External *bool
	/*ID
	  Stack identifier

	*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the stack delete params
func (o *StackDeleteParams) WithTimeout(timeout time.Duration) *StackDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the stack delete params
func (o *StackDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the stack delete params
func (o *StackDeleteParams) WithContext(ctx context.Context) *StackDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the stack delete params
func (o *StackDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the stack delete params
func (o *StackDeleteParams) WithHTTPClient(client *http.Client) *StackDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the stack delete params
func (o *StackDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndpointID adds the endpointID to the stack delete params
func (o *StackDeleteParams) WithEndpointID(endpointID *string) *StackDeleteParams {
	o.SetEndpointID(endpointID)
	return o
}

// SetEndpointID adds the endpointId to the stack delete params
func (o *StackDeleteParams) SetEndpointID(endpointID *string) {
	o.EndpointID = endpointID
}

// WithExternal adds the external to the stack delete params
func (o *StackDeleteParams) WithExternal(external *bool) *StackDeleteParams {
	o.SetExternal(external)
	return o
}

// SetExternal adds the external to the stack delete params
func (o *StackDeleteParams) SetExternal(external *bool) {
	o.External = external
}

// WithID adds the id to the stack delete params
func (o *StackDeleteParams) WithID(id int64) *StackDeleteParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the stack delete params
func (o *StackDeleteParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *StackDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EndpointID != nil {

		// query param endpointId
		var qrEndpointID string
		if o.EndpointID != nil {
			qrEndpointID = *o.EndpointID
		}
		qEndpointID := qrEndpointID
		if qEndpointID != "" {
			if err := r.SetQueryParam("endpointId", qEndpointID); err != nil {
				return err
			}
		}

	}

	if o.External != nil {

		// query param external
		var qrExternal bool
		if o.External != nil {
			qrExternal = *o.External
		}
		qExternal := swag.FormatBool(qrExternal)
		if qExternal != "" {
			if err := r.SetQueryParam("external", qExternal); err != nil {
				return err
			}
		}

	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
