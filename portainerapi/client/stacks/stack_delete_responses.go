// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// StackDeleteReader is a Reader for the StackDelete structure.
type StackDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewStackDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewStackDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewStackDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewStackDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewStackDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStackDeleteNoContent creates a StackDeleteNoContent with default headers values
func NewStackDeleteNoContent() *StackDeleteNoContent {
	return &StackDeleteNoContent{}
}

/*StackDeleteNoContent handles this case with default header values.

Success
*/
type StackDeleteNoContent struct {
}

func (o *StackDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /stacks/{id}][%d] stackDeleteNoContent ", 204)
}

func (o *StackDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStackDeleteBadRequest creates a StackDeleteBadRequest with default headers values
func NewStackDeleteBadRequest() *StackDeleteBadRequest {
	return &StackDeleteBadRequest{}
}

/*StackDeleteBadRequest handles this case with default header values.

Invalid request
*/
type StackDeleteBadRequest struct {
	Payload *models.GenericError
}

func (o *StackDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /stacks/{id}][%d] stackDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *StackDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackDeleteForbidden creates a StackDeleteForbidden with default headers values
func NewStackDeleteForbidden() *StackDeleteForbidden {
	return &StackDeleteForbidden{}
}

/*StackDeleteForbidden handles this case with default header values.

Unauthorized
*/
type StackDeleteForbidden struct {
	Payload *models.GenericError
}

func (o *StackDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /stacks/{id}][%d] stackDeleteForbidden  %+v", 403, o.Payload)
}

func (o *StackDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackDeleteNotFound creates a StackDeleteNotFound with default headers values
func NewStackDeleteNotFound() *StackDeleteNotFound {
	return &StackDeleteNotFound{}
}

/*StackDeleteNotFound handles this case with default header values.

Stack not found
*/
type StackDeleteNotFound struct {
	Payload *models.GenericError
}

func (o *StackDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /stacks/{id}][%d] stackDeleteNotFound  %+v", 404, o.Payload)
}

func (o *StackDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackDeleteInternalServerError creates a StackDeleteInternalServerError with default headers values
func NewStackDeleteInternalServerError() *StackDeleteInternalServerError {
	return &StackDeleteInternalServerError{}
}

/*StackDeleteInternalServerError handles this case with default header values.

Server error
*/
type StackDeleteInternalServerError struct {
	Payload *models.GenericError
}

func (o *StackDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /stacks/{id}][%d] stackDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *StackDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
