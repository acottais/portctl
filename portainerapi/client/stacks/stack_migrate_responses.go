// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// StackMigrateReader is a Reader for the StackMigrate structure.
type StackMigrateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StackMigrateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStackMigrateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewStackMigrateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewStackMigrateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewStackMigrateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewStackMigrateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStackMigrateOK creates a StackMigrateOK with default headers values
func NewStackMigrateOK() *StackMigrateOK {
	return &StackMigrateOK{}
}

/*StackMigrateOK handles this case with default header values.

Success
*/
type StackMigrateOK struct {
	Payload *models.Stack
}

func (o *StackMigrateOK) Error() string {
	return fmt.Sprintf("[POST /stacks/{id}/migrate][%d] stackMigrateOK  %+v", 200, o.Payload)
}

func (o *StackMigrateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackMigrateBadRequest creates a StackMigrateBadRequest with default headers values
func NewStackMigrateBadRequest() *StackMigrateBadRequest {
	return &StackMigrateBadRequest{}
}

/*StackMigrateBadRequest handles this case with default header values.

Invalid request
*/
type StackMigrateBadRequest struct {
	Payload *models.GenericError
}

func (o *StackMigrateBadRequest) Error() string {
	return fmt.Sprintf("[POST /stacks/{id}/migrate][%d] stackMigrateBadRequest  %+v", 400, o.Payload)
}

func (o *StackMigrateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackMigrateForbidden creates a StackMigrateForbidden with default headers values
func NewStackMigrateForbidden() *StackMigrateForbidden {
	return &StackMigrateForbidden{}
}

/*StackMigrateForbidden handles this case with default header values.

Unauthorized
*/
type StackMigrateForbidden struct {
	Payload *models.GenericError
}

func (o *StackMigrateForbidden) Error() string {
	return fmt.Sprintf("[POST /stacks/{id}/migrate][%d] stackMigrateForbidden  %+v", 403, o.Payload)
}

func (o *StackMigrateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackMigrateNotFound creates a StackMigrateNotFound with default headers values
func NewStackMigrateNotFound() *StackMigrateNotFound {
	return &StackMigrateNotFound{}
}

/*StackMigrateNotFound handles this case with default header values.

Stack not found
*/
type StackMigrateNotFound struct {
	Payload *models.GenericError
}

func (o *StackMigrateNotFound) Error() string {
	return fmt.Sprintf("[POST /stacks/{id}/migrate][%d] stackMigrateNotFound  %+v", 404, o.Payload)
}

func (o *StackMigrateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStackMigrateInternalServerError creates a StackMigrateInternalServerError with default headers values
func NewStackMigrateInternalServerError() *StackMigrateInternalServerError {
	return &StackMigrateInternalServerError{}
}

/*StackMigrateInternalServerError handles this case with default header values.

Server error
*/
type StackMigrateInternalServerError struct {
	Payload *models.GenericError
}

func (o *StackMigrateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /stacks/{id}/migrate][%d] stackMigrateInternalServerError  %+v", 500, o.Payload)
}

func (o *StackMigrateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
