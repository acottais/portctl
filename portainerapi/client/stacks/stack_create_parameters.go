// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// NewStackCreateParams creates a new StackCreateParams object
// with the default values initialized.
func NewStackCreateParams() *StackCreateParams {
	var ()
	return &StackCreateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStackCreateParamsWithTimeout creates a new StackCreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStackCreateParamsWithTimeout(timeout time.Duration) *StackCreateParams {
	var ()
	return &StackCreateParams{

		timeout: timeout,
	}
}

// NewStackCreateParamsWithContext creates a new StackCreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewStackCreateParamsWithContext(ctx context.Context) *StackCreateParams {
	var ()
	return &StackCreateParams{

		Context: ctx,
	}
}

// NewStackCreateParamsWithHTTPClient creates a new StackCreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStackCreateParamsWithHTTPClient(client *http.Client) *StackCreateParams {
	var ()
	return &StackCreateParams{
		HTTPClient: client,
	}
}

/*StackCreateParams contains all the parameters to send to the API endpoint
for the stack create operation typically these are written to a http.Request
*/
type StackCreateParams struct {

	/*Body
	  Stack details. Required when method equals string or repository.

	*/
	Body *models.StackCreateRequest
	/*EndpointID
	  Identifier of the endpoint that will be used to deploy the stack.

	*/
	EndpointID int64
	/*Method
	  Stack deployment method. Possible values: string or repository. This API does not support file method

	*/
	Method string
	/*Type
	  Stack deployment type. Possible values: 1 (Swarm stack) or 2 (Compose stack).

	*/
	Type int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the stack create params
func (o *StackCreateParams) WithTimeout(timeout time.Duration) *StackCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the stack create params
func (o *StackCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the stack create params
func (o *StackCreateParams) WithContext(ctx context.Context) *StackCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the stack create params
func (o *StackCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the stack create params
func (o *StackCreateParams) WithHTTPClient(client *http.Client) *StackCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the stack create params
func (o *StackCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the stack create params
func (o *StackCreateParams) WithBody(body *models.StackCreateRequest) *StackCreateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the stack create params
func (o *StackCreateParams) SetBody(body *models.StackCreateRequest) {
	o.Body = body
}

// WithEndpointID adds the endpointID to the stack create params
func (o *StackCreateParams) WithEndpointID(endpointID int64) *StackCreateParams {
	o.SetEndpointID(endpointID)
	return o
}

// SetEndpointID adds the endpointId to the stack create params
func (o *StackCreateParams) SetEndpointID(endpointID int64) {
	o.EndpointID = endpointID
}

// WithMethod adds the method to the stack create params
func (o *StackCreateParams) WithMethod(method string) *StackCreateParams {
	o.SetMethod(method)
	return o
}

// SetMethod adds the method to the stack create params
func (o *StackCreateParams) SetMethod(method string) {
	o.Method = method
}

// WithType adds the typeVar to the stack create params
func (o *StackCreateParams) WithType(typeVar int64) *StackCreateParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the stack create params
func (o *StackCreateParams) SetType(typeVar int64) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *StackCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// query param endpointId
	qrEndpointID := o.EndpointID
	qEndpointID := swag.FormatInt64(qrEndpointID)
	if qEndpointID != "" {
		if err := r.SetQueryParam("endpointId", qEndpointID); err != nil {
			return err
		}
	}

	// query param method
	qrMethod := o.Method
	qMethod := qrMethod
	if qMethod != "" {
		if err := r.SetQueryParam("method", qMethod); err != nil {
			return err
		}
	}

	// query param type
	qrType := o.Type
	qType := swag.FormatInt64(qrType)
	if qType != "" {
		if err := r.SetQueryParam("type", qType); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
