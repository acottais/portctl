// Code generated by go-swagger; DO NOT EDIT.

package settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// PublicSettingsInspectReader is a Reader for the PublicSettingsInspect structure.
type PublicSettingsInspectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PublicSettingsInspectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPublicSettingsInspectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewPublicSettingsInspectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPublicSettingsInspectOK creates a PublicSettingsInspectOK with default headers values
func NewPublicSettingsInspectOK() *PublicSettingsInspectOK {
	return &PublicSettingsInspectOK{}
}

/*PublicSettingsInspectOK handles this case with default header values.

Success
*/
type PublicSettingsInspectOK struct {
	Payload *models.PublicSettingsInspectResponse
}

func (o *PublicSettingsInspectOK) Error() string {
	return fmt.Sprintf("[GET /settings/public][%d] publicSettingsInspectOK  %+v", 200, o.Payload)
}

func (o *PublicSettingsInspectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PublicSettingsInspectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPublicSettingsInspectInternalServerError creates a PublicSettingsInspectInternalServerError with default headers values
func NewPublicSettingsInspectInternalServerError() *PublicSettingsInspectInternalServerError {
	return &PublicSettingsInspectInternalServerError{}
}

/*PublicSettingsInspectInternalServerError handles this case with default header values.

Server error
*/
type PublicSettingsInspectInternalServerError struct {
	Payload *models.GenericError
}

func (o *PublicSettingsInspectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /settings/public][%d] publicSettingsInspectInternalServerError  %+v", 500, o.Payload)
}

func (o *PublicSettingsInspectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
