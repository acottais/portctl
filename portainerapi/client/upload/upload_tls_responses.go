// Code generated by go-swagger; DO NOT EDIT.

package upload

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// UploadTLSReader is a Reader for the UploadTLS structure.
type UploadTLSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadTLSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUploadTLSOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUploadTLSBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUploadTLSInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUploadTLSOK creates a UploadTLSOK with default headers values
func NewUploadTLSOK() *UploadTLSOK {
	return &UploadTLSOK{}
}

/*UploadTLSOK handles this case with default header values.

Success
*/
type UploadTLSOK struct {
}

func (o *UploadTLSOK) Error() string {
	return fmt.Sprintf("[POST /upload/tls/{certificate}][%d] uploadTlsOK ", 200)
}

func (o *UploadTLSOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadTLSBadRequest creates a UploadTLSBadRequest with default headers values
func NewUploadTLSBadRequest() *UploadTLSBadRequest {
	return &UploadTLSBadRequest{}
}

/*UploadTLSBadRequest handles this case with default header values.

Invalid request
*/
type UploadTLSBadRequest struct {
	Payload *models.GenericError
}

func (o *UploadTLSBadRequest) Error() string {
	return fmt.Sprintf("[POST /upload/tls/{certificate}][%d] uploadTlsBadRequest  %+v", 400, o.Payload)
}

func (o *UploadTLSBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadTLSInternalServerError creates a UploadTLSInternalServerError with default headers values
func NewUploadTLSInternalServerError() *UploadTLSInternalServerError {
	return &UploadTLSInternalServerError{}
}

/*UploadTLSInternalServerError handles this case with default header values.

Server error
*/
type UploadTLSInternalServerError struct {
	Payload *models.GenericError
}

func (o *UploadTLSInternalServerError) Error() string {
	return fmt.Sprintf("[POST /upload/tls/{certificate}][%d] uploadTlsInternalServerError  %+v", 500, o.Payload)
}

func (o *UploadTLSInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
