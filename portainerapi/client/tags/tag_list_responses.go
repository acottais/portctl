// Code generated by go-swagger; DO NOT EDIT.

package tags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// TagListReader is a Reader for the TagList structure.
type TagListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TagListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTagListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewTagListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTagListOK creates a TagListOK with default headers values
func NewTagListOK() *TagListOK {
	return &TagListOK{}
}

/*TagListOK handles this case with default header values.

Success
*/
type TagListOK struct {
	Payload models.TagListResponse
}

func (o *TagListOK) Error() string {
	return fmt.Sprintf("[GET /tags][%d] tagListOK  %+v", 200, o.Payload)
}

func (o *TagListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTagListInternalServerError creates a TagListInternalServerError with default headers values
func NewTagListInternalServerError() *TagListInternalServerError {
	return &TagListInternalServerError{}
}

/*TagListInternalServerError handles this case with default header values.

Server error
*/
type TagListInternalServerError struct {
	Payload *models.GenericError
}

func (o *TagListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tags][%d] tagListInternalServerError  %+v", 500, o.Payload)
}

func (o *TagListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
