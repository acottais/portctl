// Code generated by go-swagger; DO NOT EDIT.

package endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// EndpointUpdateReader is a Reader for the EndpointUpdate structure.
type EndpointUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EndpointUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewEndpointUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewEndpointUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewEndpointUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewEndpointUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewEndpointUpdateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewEndpointUpdateOK creates a EndpointUpdateOK with default headers values
func NewEndpointUpdateOK() *EndpointUpdateOK {
	return &EndpointUpdateOK{}
}

/*EndpointUpdateOK handles this case with default header values.

Success
*/
type EndpointUpdateOK struct {
}

func (o *EndpointUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /endpoints/{id}][%d] endpointUpdateOK ", 200)
}

func (o *EndpointUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEndpointUpdateBadRequest creates a EndpointUpdateBadRequest with default headers values
func NewEndpointUpdateBadRequest() *EndpointUpdateBadRequest {
	return &EndpointUpdateBadRequest{}
}

/*EndpointUpdateBadRequest handles this case with default header values.

Invalid request
*/
type EndpointUpdateBadRequest struct {
	Payload *models.GenericError
}

func (o *EndpointUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /endpoints/{id}][%d] endpointUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *EndpointUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEndpointUpdateNotFound creates a EndpointUpdateNotFound with default headers values
func NewEndpointUpdateNotFound() *EndpointUpdateNotFound {
	return &EndpointUpdateNotFound{}
}

/*EndpointUpdateNotFound handles this case with default header values.

Endpoint not found
*/
type EndpointUpdateNotFound struct {
	Payload *models.GenericError
}

func (o *EndpointUpdateNotFound) Error() string {
	return fmt.Sprintf("[PUT /endpoints/{id}][%d] endpointUpdateNotFound  %+v", 404, o.Payload)
}

func (o *EndpointUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEndpointUpdateInternalServerError creates a EndpointUpdateInternalServerError with default headers values
func NewEndpointUpdateInternalServerError() *EndpointUpdateInternalServerError {
	return &EndpointUpdateInternalServerError{}
}

/*EndpointUpdateInternalServerError handles this case with default header values.

Server error
*/
type EndpointUpdateInternalServerError struct {
	Payload *models.GenericError
}

func (o *EndpointUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /endpoints/{id}][%d] endpointUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *EndpointUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEndpointUpdateServiceUnavailable creates a EndpointUpdateServiceUnavailable with default headers values
func NewEndpointUpdateServiceUnavailable() *EndpointUpdateServiceUnavailable {
	return &EndpointUpdateServiceUnavailable{}
}

/*EndpointUpdateServiceUnavailable handles this case with default header values.

Endpoint management disabled
*/
type EndpointUpdateServiceUnavailable struct {
	Payload *models.GenericError
}

func (o *EndpointUpdateServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /endpoints/{id}][%d] endpointUpdateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *EndpointUpdateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
