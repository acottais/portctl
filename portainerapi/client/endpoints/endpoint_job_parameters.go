// Code generated by go-swagger; DO NOT EDIT.

package endpoints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// NewEndpointJobParams creates a new EndpointJobParams object
// with the default values initialized.
func NewEndpointJobParams() *EndpointJobParams {
	var ()
	return &EndpointJobParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEndpointJobParamsWithTimeout creates a new EndpointJobParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEndpointJobParamsWithTimeout(timeout time.Duration) *EndpointJobParams {
	var ()
	return &EndpointJobParams{

		timeout: timeout,
	}
}

// NewEndpointJobParamsWithContext creates a new EndpointJobParams object
// with the default values initialized, and the ability to set a context for a request
func NewEndpointJobParamsWithContext(ctx context.Context) *EndpointJobParams {
	var ()
	return &EndpointJobParams{

		Context: ctx,
	}
}

// NewEndpointJobParamsWithHTTPClient creates a new EndpointJobParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEndpointJobParamsWithHTTPClient(client *http.Client) *EndpointJobParams {
	var ()
	return &EndpointJobParams{
		HTTPClient: client,
	}
}

/*EndpointJobParams contains all the parameters to send to the API endpoint
for the endpoint job operation typically these are written to a http.Request
*/
type EndpointJobParams struct {

	/*Body
	  Job details. Required when method equals string.

	*/
	Body *models.EndpointJobRequest
	/*ID
	  Endpoint identifier

	*/
	ID int64
	/*Method
	  Job execution method. Possible values: string. This API does not support file mode

	*/
	Method string
	/*NodeName
	  Optional. Hostname of a node when targeting a Portainer agent cluster.

	*/
	NodeName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the endpoint job params
func (o *EndpointJobParams) WithTimeout(timeout time.Duration) *EndpointJobParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the endpoint job params
func (o *EndpointJobParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the endpoint job params
func (o *EndpointJobParams) WithContext(ctx context.Context) *EndpointJobParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the endpoint job params
func (o *EndpointJobParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the endpoint job params
func (o *EndpointJobParams) WithHTTPClient(client *http.Client) *EndpointJobParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the endpoint job params
func (o *EndpointJobParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the endpoint job params
func (o *EndpointJobParams) WithBody(body *models.EndpointJobRequest) *EndpointJobParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the endpoint job params
func (o *EndpointJobParams) SetBody(body *models.EndpointJobRequest) {
	o.Body = body
}

// WithID adds the id to the endpoint job params
func (o *EndpointJobParams) WithID(id int64) *EndpointJobParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the endpoint job params
func (o *EndpointJobParams) SetID(id int64) {
	o.ID = id
}

// WithMethod adds the method to the endpoint job params
func (o *EndpointJobParams) WithMethod(method string) *EndpointJobParams {
	o.SetMethod(method)
	return o
}

// SetMethod adds the method to the endpoint job params
func (o *EndpointJobParams) SetMethod(method string) {
	o.Method = method
}

// WithNodeName adds the nodeName to the endpoint job params
func (o *EndpointJobParams) WithNodeName(nodeName string) *EndpointJobParams {
	o.SetNodeName(nodeName)
	return o
}

// SetNodeName adds the nodeName to the endpoint job params
func (o *EndpointJobParams) SetNodeName(nodeName string) {
	o.NodeName = nodeName
}

// WriteToRequest writes these params to a swagger request
func (o *EndpointJobParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// query param method
	qrMethod := o.Method
	qMethod := qrMethod
	if qMethod != "" {
		if err := r.SetQueryParam("method", qMethod); err != nil {
			return err
		}
	}

	// query param nodeName
	qrNodeName := o.NodeName
	qNodeName := qrNodeName
	if qNodeName != "" {
		if err := r.SetQueryParam("nodeName", qNodeName); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
