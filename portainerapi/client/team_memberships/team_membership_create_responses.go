// Code generated by go-swagger; DO NOT EDIT.

package team_memberships

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// TeamMembershipCreateReader is a Reader for the TeamMembershipCreate structure.
type TeamMembershipCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamMembershipCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTeamMembershipCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewTeamMembershipCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewTeamMembershipCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewTeamMembershipCreateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewTeamMembershipCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTeamMembershipCreateOK creates a TeamMembershipCreateOK with default headers values
func NewTeamMembershipCreateOK() *TeamMembershipCreateOK {
	return &TeamMembershipCreateOK{}
}

/*TeamMembershipCreateOK handles this case with default header values.

Success
*/
type TeamMembershipCreateOK struct {
	Payload *models.TeamMembership
}

func (o *TeamMembershipCreateOK) Error() string {
	return fmt.Sprintf("[POST /team_memberships][%d] teamMembershipCreateOK  %+v", 200, o.Payload)
}

func (o *TeamMembershipCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TeamMembership)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamMembershipCreateBadRequest creates a TeamMembershipCreateBadRequest with default headers values
func NewTeamMembershipCreateBadRequest() *TeamMembershipCreateBadRequest {
	return &TeamMembershipCreateBadRequest{}
}

/*TeamMembershipCreateBadRequest handles this case with default header values.

Invalid request
*/
type TeamMembershipCreateBadRequest struct {
	Payload *models.GenericError
}

func (o *TeamMembershipCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /team_memberships][%d] teamMembershipCreateBadRequest  %+v", 400, o.Payload)
}

func (o *TeamMembershipCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamMembershipCreateForbidden creates a TeamMembershipCreateForbidden with default headers values
func NewTeamMembershipCreateForbidden() *TeamMembershipCreateForbidden {
	return &TeamMembershipCreateForbidden{}
}

/*TeamMembershipCreateForbidden handles this case with default header values.

Unauthorized
*/
type TeamMembershipCreateForbidden struct {
	Payload *models.GenericError
}

func (o *TeamMembershipCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /team_memberships][%d] teamMembershipCreateForbidden  %+v", 403, o.Payload)
}

func (o *TeamMembershipCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamMembershipCreateConflict creates a TeamMembershipCreateConflict with default headers values
func NewTeamMembershipCreateConflict() *TeamMembershipCreateConflict {
	return &TeamMembershipCreateConflict{}
}

/*TeamMembershipCreateConflict handles this case with default header values.

Team membership already exists
*/
type TeamMembershipCreateConflict struct {
	Payload *models.GenericError
}

func (o *TeamMembershipCreateConflict) Error() string {
	return fmt.Sprintf("[POST /team_memberships][%d] teamMembershipCreateConflict  %+v", 409, o.Payload)
}

func (o *TeamMembershipCreateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamMembershipCreateInternalServerError creates a TeamMembershipCreateInternalServerError with default headers values
func NewTeamMembershipCreateInternalServerError() *TeamMembershipCreateInternalServerError {
	return &TeamMembershipCreateInternalServerError{}
}

/*TeamMembershipCreateInternalServerError handles this case with default header values.

Server error
*/
type TeamMembershipCreateInternalServerError struct {
	Payload *models.GenericError
}

func (o *TeamMembershipCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /team_memberships][%d] teamMembershipCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *TeamMembershipCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
