// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// TeamListReader is a Reader for the TeamList structure.
type TeamListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TeamListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTeamListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewTeamListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewTeamListOK creates a TeamListOK with default headers values
func NewTeamListOK() *TeamListOK {
	return &TeamListOK{}
}

/*TeamListOK handles this case with default header values.

Success
*/
type TeamListOK struct {
	Payload models.TeamListResponse
}

func (o *TeamListOK) Error() string {
	return fmt.Sprintf("[GET /teams][%d] teamListOK  %+v", 200, o.Payload)
}

func (o *TeamListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTeamListInternalServerError creates a TeamListInternalServerError with default headers values
func NewTeamListInternalServerError() *TeamListInternalServerError {
	return &TeamListInternalServerError{}
}

/*TeamListInternalServerError handles this case with default header values.

Server error
*/
type TeamListInternalServerError struct {
	Payload *models.GenericError
}

func (o *TeamListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /teams][%d] teamListInternalServerError  %+v", 500, o.Payload)
}

func (o *TeamListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
