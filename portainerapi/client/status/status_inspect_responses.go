// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// StatusInspectReader is a Reader for the StatusInspect structure.
type StatusInspectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatusInspectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStatusInspectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewStatusInspectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStatusInspectOK creates a StatusInspectOK with default headers values
func NewStatusInspectOK() *StatusInspectOK {
	return &StatusInspectOK{}
}

/*StatusInspectOK handles this case with default header values.

Success
*/
type StatusInspectOK struct {
	Payload *models.Status
}

func (o *StatusInspectOK) Error() string {
	return fmt.Sprintf("[GET /status][%d] statusInspectOK  %+v", 200, o.Payload)
}

func (o *StatusInspectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatusInspectInternalServerError creates a StatusInspectInternalServerError with default headers values
func NewStatusInspectInternalServerError() *StatusInspectInternalServerError {
	return &StatusInspectInternalServerError{}
}

/*StatusInspectInternalServerError handles this case with default header values.

Server error
*/
type StatusInspectInternalServerError struct {
	Payload *models.GenericError
}

func (o *StatusInspectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /status][%d] statusInspectInternalServerError  %+v", 500, o.Payload)
}

func (o *StatusInspectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
