// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/portainerapi/models"
)

// AuthenticateUserReader is a Reader for the AuthenticateUser structure.
type AuthenticateUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthenticateUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAuthenticateUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAuthenticateUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewAuthenticateUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewAuthenticateUserServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAuthenticateUserOK creates a AuthenticateUserOK with default headers values
func NewAuthenticateUserOK() *AuthenticateUserOK {
	return &AuthenticateUserOK{}
}

/*AuthenticateUserOK handles this case with default header values.

Success
*/
type AuthenticateUserOK struct {
	Payload *models.AuthenticateUserResponse
}

func (o *AuthenticateUserOK) Error() string {
	return fmt.Sprintf("[POST /auth][%d] authenticateUserOK  %+v", 200, o.Payload)
}

func (o *AuthenticateUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticateUserResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthenticateUserBadRequest creates a AuthenticateUserBadRequest with default headers values
func NewAuthenticateUserBadRequest() *AuthenticateUserBadRequest {
	return &AuthenticateUserBadRequest{}
}

/*AuthenticateUserBadRequest handles this case with default header values.

Invalid request
*/
type AuthenticateUserBadRequest struct {
	Payload *models.GenericError
}

func (o *AuthenticateUserBadRequest) Error() string {
	return fmt.Sprintf("[POST /auth][%d] authenticateUserBadRequest  %+v", 400, o.Payload)
}

func (o *AuthenticateUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthenticateUserInternalServerError creates a AuthenticateUserInternalServerError with default headers values
func NewAuthenticateUserInternalServerError() *AuthenticateUserInternalServerError {
	return &AuthenticateUserInternalServerError{}
}

/*AuthenticateUserInternalServerError handles this case with default header values.

Server error
*/
type AuthenticateUserInternalServerError struct {
	Payload *models.GenericError
}

func (o *AuthenticateUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /auth][%d] authenticateUserInternalServerError  %+v", 500, o.Payload)
}

func (o *AuthenticateUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthenticateUserServiceUnavailable creates a AuthenticateUserServiceUnavailable with default headers values
func NewAuthenticateUserServiceUnavailable() *AuthenticateUserServiceUnavailable {
	return &AuthenticateUserServiceUnavailable{}
}

/*AuthenticateUserServiceUnavailable handles this case with default header values.

Authentication disabled
*/
type AuthenticateUserServiceUnavailable struct {
	Payload *models.GenericError
}

func (o *AuthenticateUserServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /auth][%d] authenticateUserServiceUnavailable  %+v", 503, o.Payload)
}

func (o *AuthenticateUserServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
