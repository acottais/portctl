// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GenericResources User-defined resources can be either Integer resources (e.g, `SSD=3`) or String resources (e.g, `GPU=UUID1`)
// swagger:model GenericResources
type GenericResources []*GenericResourcesItems0

// Validate validates this generic resources
func (m GenericResources) Validate(formats strfmt.Registry) error {
	var res []error

	for i := 0; i < len(m); i++ {
		if swag.IsZero(m[i]) { // not required
			continue
		}

		if m[i] != nil {
			if err := m[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(strconv.Itoa(i))
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// GenericResourcesItems0 generic resources items0
// swagger:model GenericResourcesItems0
type GenericResourcesItems0 struct {

	// discrete resource spec
	DiscreteResourceSpec *GenericResourcesItems0DiscreteResourceSpec `json:"DiscreteResourceSpec,omitempty"`

	// named resource spec
	NamedResourceSpec *GenericResourcesItems0NamedResourceSpec `json:"NamedResourceSpec,omitempty"`
}

// Validate validates this generic resources items0
func (m *GenericResourcesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDiscreteResourceSpec(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNamedResourceSpec(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GenericResourcesItems0) validateDiscreteResourceSpec(formats strfmt.Registry) error {

	if swag.IsZero(m.DiscreteResourceSpec) { // not required
		return nil
	}

	if m.DiscreteResourceSpec != nil {
		if err := m.DiscreteResourceSpec.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("DiscreteResourceSpec")
			}
			return err
		}
	}

	return nil
}

func (m *GenericResourcesItems0) validateNamedResourceSpec(formats strfmt.Registry) error {

	if swag.IsZero(m.NamedResourceSpec) { // not required
		return nil
	}

	if m.NamedResourceSpec != nil {
		if err := m.NamedResourceSpec.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("NamedResourceSpec")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GenericResourcesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GenericResourcesItems0) UnmarshalBinary(b []byte) error {
	var res GenericResourcesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GenericResourcesItems0DiscreteResourceSpec generic resources items0 discrete resource spec
// swagger:model GenericResourcesItems0DiscreteResourceSpec
type GenericResourcesItems0DiscreteResourceSpec struct {

	// kind
	Kind string `json:"Kind,omitempty"`

	// value
	Value int64 `json:"Value,omitempty"`
}

// Validate validates this generic resources items0 discrete resource spec
func (m *GenericResourcesItems0DiscreteResourceSpec) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GenericResourcesItems0DiscreteResourceSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GenericResourcesItems0DiscreteResourceSpec) UnmarshalBinary(b []byte) error {
	var res GenericResourcesItems0DiscreteResourceSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// GenericResourcesItems0NamedResourceSpec generic resources items0 named resource spec
// swagger:model GenericResourcesItems0NamedResourceSpec
type GenericResourcesItems0NamedResourceSpec struct {

	// kind
	Kind string `json:"Kind,omitempty"`

	// value
	Value string `json:"Value,omitempty"`
}

// Validate validates this generic resources items0 named resource spec
func (m *GenericResourcesItems0NamedResourceSpec) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GenericResourcesItems0NamedResourceSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GenericResourcesItems0NamedResourceSpec) UnmarshalBinary(b []byte) error {
	var res GenericResourcesItems0NamedResourceSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
