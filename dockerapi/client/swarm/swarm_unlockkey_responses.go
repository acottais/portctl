// Code generated by go-swagger; DO NOT EDIT.

package swarm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/dockerapi/models"
)

// SwarmUnlockkeyReader is a Reader for the SwarmUnlockkey structure.
type SwarmUnlockkeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SwarmUnlockkeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSwarmUnlockkeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewSwarmUnlockkeyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewSwarmUnlockkeyServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSwarmUnlockkeyOK creates a SwarmUnlockkeyOK with default headers values
func NewSwarmUnlockkeyOK() *SwarmUnlockkeyOK {
	return &SwarmUnlockkeyOK{}
}

/*SwarmUnlockkeyOK handles this case with default header values.

no error
*/
type SwarmUnlockkeyOK struct {
	Payload *SwarmUnlockkeyOKBody
}

func (o *SwarmUnlockkeyOK) Error() string {
	return fmt.Sprintf("[GET /swarm/unlockkey][%d] swarmUnlockkeyOK  %+v", 200, o.Payload)
}

func (o *SwarmUnlockkeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(SwarmUnlockkeyOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSwarmUnlockkeyInternalServerError creates a SwarmUnlockkeyInternalServerError with default headers values
func NewSwarmUnlockkeyInternalServerError() *SwarmUnlockkeyInternalServerError {
	return &SwarmUnlockkeyInternalServerError{}
}

/*SwarmUnlockkeyInternalServerError handles this case with default header values.

server error
*/
type SwarmUnlockkeyInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *SwarmUnlockkeyInternalServerError) Error() string {
	return fmt.Sprintf("[GET /swarm/unlockkey][%d] swarmUnlockkeyInternalServerError  %+v", 500, o.Payload)
}

func (o *SwarmUnlockkeyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSwarmUnlockkeyServiceUnavailable creates a SwarmUnlockkeyServiceUnavailable with default headers values
func NewSwarmUnlockkeyServiceUnavailable() *SwarmUnlockkeyServiceUnavailable {
	return &SwarmUnlockkeyServiceUnavailable{}
}

/*SwarmUnlockkeyServiceUnavailable handles this case with default header values.

node is not part of a swarm
*/
type SwarmUnlockkeyServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *SwarmUnlockkeyServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /swarm/unlockkey][%d] swarmUnlockkeyServiceUnavailable  %+v", 503, o.Payload)
}

func (o *SwarmUnlockkeyServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SwarmUnlockkeyOKBody UnlockKeyResponse
swagger:model SwarmUnlockkeyOKBody
*/
type SwarmUnlockkeyOKBody struct {

	// The swarm's unlock key.
	UnlockKey string `json:"UnlockKey,omitempty"`
}

// Validate validates this swarm unlockkey o k body
func (o *SwarmUnlockkeyOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SwarmUnlockkeyOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SwarmUnlockkeyOKBody) UnmarshalBinary(b []byte) error {
	var res SwarmUnlockkeyOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
