// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/dockerapi/models"
)

// NetworkDeleteReader is a Reader for the NetworkDelete structure.
type NetworkDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetworkDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewNetworkDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewNetworkDeleteForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewNetworkDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewNetworkDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNetworkDeleteNoContent creates a NetworkDeleteNoContent with default headers values
func NewNetworkDeleteNoContent() *NetworkDeleteNoContent {
	return &NetworkDeleteNoContent{}
}

/*NetworkDeleteNoContent handles this case with default header values.

No error
*/
type NetworkDeleteNoContent struct {
}

func (o *NetworkDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /networks/{id}][%d] networkDeleteNoContent ", 204)
}

func (o *NetworkDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNetworkDeleteForbidden creates a NetworkDeleteForbidden with default headers values
func NewNetworkDeleteForbidden() *NetworkDeleteForbidden {
	return &NetworkDeleteForbidden{}
}

/*NetworkDeleteForbidden handles this case with default header values.

operation not supported for pre-defined networks
*/
type NetworkDeleteForbidden struct {
	Payload *models.ErrorResponse
}

func (o *NetworkDeleteForbidden) Error() string {
	return fmt.Sprintf("[DELETE /networks/{id}][%d] networkDeleteForbidden  %+v", 403, o.Payload)
}

func (o *NetworkDeleteForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkDeleteNotFound creates a NetworkDeleteNotFound with default headers values
func NewNetworkDeleteNotFound() *NetworkDeleteNotFound {
	return &NetworkDeleteNotFound{}
}

/*NetworkDeleteNotFound handles this case with default header values.

no such network
*/
type NetworkDeleteNotFound struct {
	Payload *models.ErrorResponse
}

func (o *NetworkDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /networks/{id}][%d] networkDeleteNotFound  %+v", 404, o.Payload)
}

func (o *NetworkDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkDeleteInternalServerError creates a NetworkDeleteInternalServerError with default headers values
func NewNetworkDeleteInternalServerError() *NetworkDeleteInternalServerError {
	return &NetworkDeleteInternalServerError{}
}

/*NetworkDeleteInternalServerError handles this case with default header values.

Server error
*/
type NetworkDeleteInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *NetworkDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /networks/{id}][%d] networkDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *NetworkDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
