// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/dockerapi/models"
)

// ImageGetAllReader is a Reader for the ImageGetAll structure.
type ImageGetAllReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *ImageGetAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewImageGetAllOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewImageGetAllInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewImageGetAllOK creates a ImageGetAllOK with default headers values
func NewImageGetAllOK(writer io.Writer) *ImageGetAllOK {
	return &ImageGetAllOK{
		Payload: writer,
	}
}

/*ImageGetAllOK handles this case with default header values.

no error
*/
type ImageGetAllOK struct {
	Payload io.Writer
}

func (o *ImageGetAllOK) Error() string {
	return fmt.Sprintf("[GET /images/get][%d] imageGetAllOK  %+v", 200, o.Payload)
}

func (o *ImageGetAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageGetAllInternalServerError creates a ImageGetAllInternalServerError with default headers values
func NewImageGetAllInternalServerError() *ImageGetAllInternalServerError {
	return &ImageGetAllInternalServerError{}
}

/*ImageGetAllInternalServerError handles this case with default header values.

server error
*/
type ImageGetAllInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ImageGetAllInternalServerError) Error() string {
	return fmt.Sprintf("[GET /images/get][%d] imageGetAllInternalServerError  %+v", 500, o.Payload)
}

func (o *ImageGetAllInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
