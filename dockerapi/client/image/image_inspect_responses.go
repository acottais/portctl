// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/dockerapi/models"
)

// ImageInspectReader is a Reader for the ImageInspect structure.
type ImageInspectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageInspectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewImageInspectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewImageInspectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewImageInspectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewImageInspectOK creates a ImageInspectOK with default headers values
func NewImageInspectOK() *ImageInspectOK {
	return &ImageInspectOK{}
}

/*ImageInspectOK handles this case with default header values.

No error
*/
type ImageInspectOK struct {
	Payload *models.Image
}

func (o *ImageInspectOK) Error() string {
	return fmt.Sprintf("[GET /images/{name}/json][%d] imageInspectOK  %+v", 200, o.Payload)
}

func (o *ImageInspectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Image)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageInspectNotFound creates a ImageInspectNotFound with default headers values
func NewImageInspectNotFound() *ImageInspectNotFound {
	return &ImageInspectNotFound{}
}

/*ImageInspectNotFound handles this case with default header values.

No such image
*/
type ImageInspectNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ImageInspectNotFound) Error() string {
	return fmt.Sprintf("[GET /images/{name}/json][%d] imageInspectNotFound  %+v", 404, o.Payload)
}

func (o *ImageInspectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageInspectInternalServerError creates a ImageInspectInternalServerError with default headers values
func NewImageInspectInternalServerError() *ImageInspectInternalServerError {
	return &ImageInspectInternalServerError{}
}

/*ImageInspectInternalServerError handles this case with default header values.

Server error
*/
type ImageInspectInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ImageInspectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /images/{name}/json][%d] imageInspectInternalServerError  %+v", 500, o.Payload)
}

func (o *ImageInspectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
