// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/dockerapi/models"
)

// ServiceCreateReader is a Reader for the ServiceCreate structure.
type ServiceCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewServiceCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewServiceCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewServiceCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewServiceCreateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewServiceCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewServiceCreateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewServiceCreateCreated creates a ServiceCreateCreated with default headers values
func NewServiceCreateCreated() *ServiceCreateCreated {
	return &ServiceCreateCreated{}
}

/*ServiceCreateCreated handles this case with default header values.

no error
*/
type ServiceCreateCreated struct {
	Payload *ServiceCreateCreatedBody
}

func (o *ServiceCreateCreated) Error() string {
	return fmt.Sprintf("[POST /services/create][%d] serviceCreateCreated  %+v", 201, o.Payload)
}

func (o *ServiceCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ServiceCreateCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceCreateBadRequest creates a ServiceCreateBadRequest with default headers values
func NewServiceCreateBadRequest() *ServiceCreateBadRequest {
	return &ServiceCreateBadRequest{}
}

/*ServiceCreateBadRequest handles this case with default header values.

bad parameter
*/
type ServiceCreateBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ServiceCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /services/create][%d] serviceCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ServiceCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceCreateForbidden creates a ServiceCreateForbidden with default headers values
func NewServiceCreateForbidden() *ServiceCreateForbidden {
	return &ServiceCreateForbidden{}
}

/*ServiceCreateForbidden handles this case with default header values.

network is not eligible for services
*/
type ServiceCreateForbidden struct {
	Payload *models.ErrorResponse
}

func (o *ServiceCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /services/create][%d] serviceCreateForbidden  %+v", 403, o.Payload)
}

func (o *ServiceCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceCreateConflict creates a ServiceCreateConflict with default headers values
func NewServiceCreateConflict() *ServiceCreateConflict {
	return &ServiceCreateConflict{}
}

/*ServiceCreateConflict handles this case with default header values.

name conflicts with an existing service
*/
type ServiceCreateConflict struct {
	Payload *models.ErrorResponse
}

func (o *ServiceCreateConflict) Error() string {
	return fmt.Sprintf("[POST /services/create][%d] serviceCreateConflict  %+v", 409, o.Payload)
}

func (o *ServiceCreateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceCreateInternalServerError creates a ServiceCreateInternalServerError with default headers values
func NewServiceCreateInternalServerError() *ServiceCreateInternalServerError {
	return &ServiceCreateInternalServerError{}
}

/*ServiceCreateInternalServerError handles this case with default header values.

server error
*/
type ServiceCreateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ServiceCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /services/create][%d] serviceCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *ServiceCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceCreateServiceUnavailable creates a ServiceCreateServiceUnavailable with default headers values
func NewServiceCreateServiceUnavailable() *ServiceCreateServiceUnavailable {
	return &ServiceCreateServiceUnavailable{}
}

/*ServiceCreateServiceUnavailable handles this case with default header values.

node is not part of a swarm
*/
type ServiceCreateServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *ServiceCreateServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /services/create][%d] serviceCreateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ServiceCreateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ServiceCreateBody service create body
swagger:model ServiceCreateBody
*/
type ServiceCreateBody struct {
	models.ServiceSpec

	ServiceCreateParamsBodyAllOf1
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *ServiceCreateBody) UnmarshalJSON(raw []byte) error {
	// ServiceCreateParamsBodyAO0
	var serviceCreateParamsBodyAO0 models.ServiceSpec
	if err := swag.ReadJSON(raw, &serviceCreateParamsBodyAO0); err != nil {
		return err
	}
	o.ServiceSpec = serviceCreateParamsBodyAO0

	// ServiceCreateParamsBodyAO1
	var serviceCreateParamsBodyAO1 ServiceCreateParamsBodyAllOf1
	if err := swag.ReadJSON(raw, &serviceCreateParamsBodyAO1); err != nil {
		return err
	}
	o.ServiceCreateParamsBodyAllOf1 = serviceCreateParamsBodyAO1

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o ServiceCreateBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	serviceCreateParamsBodyAO0, err := swag.WriteJSON(o.ServiceSpec)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, serviceCreateParamsBodyAO0)

	serviceCreateParamsBodyAO1, err := swag.WriteJSON(o.ServiceCreateParamsBodyAllOf1)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, serviceCreateParamsBodyAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this service create body
func (o *ServiceCreateBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.ServiceSpec
	if err := o.ServiceSpec.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with ServiceCreateParamsBodyAllOf1

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *ServiceCreateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServiceCreateBody) UnmarshalBinary(b []byte) error {
	var res ServiceCreateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ServiceCreateCreatedBody ServiceCreateResponse
swagger:model ServiceCreateCreatedBody
*/
type ServiceCreateCreatedBody struct {

	// The ID of the created service.
	ID string `json:"ID,omitempty"`

	// Optional warning message
	Warning string `json:"Warning,omitempty"`
}

// Validate validates this service create created body
func (o *ServiceCreateCreatedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ServiceCreateCreatedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ServiceCreateCreatedBody) UnmarshalBinary(b []byte) error {
	var res ServiceCreateCreatedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ServiceCreateParamsBodyAllOf1 service create params body all of1
swagger:model ServiceCreateParamsBodyAllOf1
*/
type ServiceCreateParamsBodyAllOf1 interface{}
