// Code generated by go-swagger; DO NOT EDIT.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/dockerapi/models"
)

// ServiceListReader is a Reader for the ServiceList structure.
type ServiceListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewServiceListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewServiceListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewServiceListServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewServiceListOK creates a ServiceListOK with default headers values
func NewServiceListOK() *ServiceListOK {
	return &ServiceListOK{}
}

/*ServiceListOK handles this case with default header values.

no error
*/
type ServiceListOK struct {
	Payload []*models.Service
}

func (o *ServiceListOK) Error() string {
	return fmt.Sprintf("[GET /services][%d] serviceListOK  %+v", 200, o.Payload)
}

func (o *ServiceListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceListInternalServerError creates a ServiceListInternalServerError with default headers values
func NewServiceListInternalServerError() *ServiceListInternalServerError {
	return &ServiceListInternalServerError{}
}

/*ServiceListInternalServerError handles this case with default header values.

server error
*/
type ServiceListInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ServiceListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /services][%d] serviceListInternalServerError  %+v", 500, o.Payload)
}

func (o *ServiceListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceListServiceUnavailable creates a ServiceListServiceUnavailable with default headers values
func NewServiceListServiceUnavailable() *ServiceListServiceUnavailable {
	return &ServiceListServiceUnavailable{}
}

/*ServiceListServiceUnavailable handles this case with default header values.

node is not part of a swarm
*/
type ServiceListServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *ServiceListServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /services][%d] serviceListServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ServiceListServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
