// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/acottais/portctl/dockerapi/models"
)

// PluginDeleteReader is a Reader for the PluginDelete structure.
type PluginDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PluginDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPluginDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPluginDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPluginDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPluginDeleteOK creates a PluginDeleteOK with default headers values
func NewPluginDeleteOK() *PluginDeleteOK {
	return &PluginDeleteOK{}
}

/*PluginDeleteOK handles this case with default header values.

no error
*/
type PluginDeleteOK struct {
	Payload *models.Plugin
}

func (o *PluginDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /plugins/{name}][%d] pluginDeleteOK  %+v", 200, o.Payload)
}

func (o *PluginDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Plugin)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPluginDeleteNotFound creates a PluginDeleteNotFound with default headers values
func NewPluginDeleteNotFound() *PluginDeleteNotFound {
	return &PluginDeleteNotFound{}
}

/*PluginDeleteNotFound handles this case with default header values.

plugin is not installed
*/
type PluginDeleteNotFound struct {
	Payload *models.ErrorResponse
}

func (o *PluginDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /plugins/{name}][%d] pluginDeleteNotFound  %+v", 404, o.Payload)
}

func (o *PluginDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPluginDeleteInternalServerError creates a PluginDeleteInternalServerError with default headers values
func NewPluginDeleteInternalServerError() *PluginDeleteInternalServerError {
	return &PluginDeleteInternalServerError{}
}

/*PluginDeleteInternalServerError handles this case with default header values.

server error
*/
type PluginDeleteInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PluginDeleteInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /plugins/{name}][%d] pluginDeleteInternalServerError  %+v", 500, o.Payload)
}

func (o *PluginDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
